@model GiveIT.UI.Web.Models.Volunteer

@{
    ViewBag.Title = "Volunteer Registration";
}

<h2>Join to Provide Help for Charities!</h2>

@using (Html.BeginForm("RegisterVolunteer", "Volunteer", FormMethod.Post, new { name = "RegisterVolunteer", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Volunteer</legend>

        <div class ="editor-label">
            @Html.LabelFor(model => model.ContactFirstName)
        </div>
        <div class ="editor-field">
            @Html.EditorFor(model => model.ContactFirstName)
            @Html.ValidationMessageFor(model => model.ContactFirstName)
        </div>

        <div class ="editor-label">
            @Html.LabelFor(model => model.ContactLastName)
        </div>
        <div class ="editor-field">
            @Html.EditorFor(model => model.ContactLastName)
            @Html.ValidationMessageFor(model => model.ContactLastName)
        </div>

        <div class ="editor-label">
            @Html.LabelFor(model => model.UserName)
        </div>
         <div class ="editor-field">
            @Html.EditorFor(model => model.UserName)
            @Html.ValidationMessageFor(model => model.UserName)
        </div>

        <div class ="editor-label">
            @Html.LabelFor(model => model.EmailAddress)
        </div>
        <div class ="editor-field">
            @Html.EditorFor(model => model.EmailAddress)
            @Html.ValidationMessageFor(model => model.EmailAddress)
        </div>

        <div class ="editor-label">
            @Html.LabelFor(model => model.ConfirmEmailAddress)
        </div>
        <div class ="editor-field">
            @Html.EditorFor(model => model.ConfirmEmailAddress)
            @Html.ValidationMessageFor(model => model.ConfirmEmailAddress)
        </div>

        <div class ="editor-label">
            @Html.LabelFor(model => model.Password)
        </div>
        <div class ="editor-field">
            @Html.EditorFor(model => model.Password)
            @Html.ValidationMessageFor(model => model.Password)
        </div>

        <div class ="editor-label">
            @Html.LabelFor(model => model.ConfirmPassword)
        </div>
        <div class ="editor-field">
            @Html.EditorFor(model => model.ConfirmPassword)
            @Html.ValidationMessageFor(model => model.ConfirmPassword)
        </div>
    
        <div class ="editor-label">
            @Html.LabelFor(model => model.PhoneNumber)
        </div>
        <div class ="editor-field">
            @Html.EditorFor(model => model.PhoneNumber)
            @Html.ValidationMessageFor(model => model.PhoneNumber)
        </div>

        <div class ="editor-label">
            @Html.LabelFor(model => model.PhoneNoExtension)
        </div>
        <div class ="editor-field">
            @Html.EditorFor(model => model.PhoneNoExtension)
            @Html.ValidationMessageFor(model => model.PhoneNoExtension)
        </div>

        <div class ="editor-label">
            @Html.LabelFor(model => model.VolunteerHours)
        </div>
        <div class ="editor-field">
            @Html.EditorFor(model => model.VolunteerHours)
            @Html.ValidationMessageFor(model => model.VolunteerHours)
        </div>

        <div class ="editor-label">
            @Html.LabelFor(model => model.SkillSet)
        </div>
        <div class ="editor-field">
            @Html.EditorFor(model => model.SkillSet)
            @Html.ValidationMessageFor(model => model.SkillSet)
        </div>

        <form action="" method ="post" enctype="multipart/form-data">
            <label for="file">Filename:</label>
            <input type="file" name="file" id="file" />
        </form>

        <div class ="input-submit">
            <input type ="submit" value="Join" />
            <button onclick="clearFields()">Clear Fields</button>
        </div>
    </fieldset>
    
     <script type ="text/javascript">

        function clearFields() {
            var form = document.forms["RegisterVolunteer"];
            $(form).find("input[type='text']").attr("value", "");
        }
    </script>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}